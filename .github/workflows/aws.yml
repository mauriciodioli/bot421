on:
  push:
    branches:
      - master

name: deploy
env:
  DEPLOYMENT_VERSION: "202404" # Variable global para representar la versión de despliegue

jobs:
  deploy-to-cluster:
    runs-on: ubuntu-latest
    env:
      # Definir la IP para la instancia EC2
      EC2_HOST: ec2-44-223-20-210.compute-1.amazonaws.com # IMAGEN PRODUCCIÓN
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run test_operacionEstrategia.py
        id: run-test
        run: |
          python src/Tests/test_operacionEstrategia.py
        continue-on-error: true

      - name: Check if the line is commented
        if: steps.run-test.outcome == 'failure'
        run: |
          echo "The critical line in operacionEstrategia.py is commented out. Stopping deployment."
          exit 1

      - name: Set Dockerfile WORKDIR to /src
        run: |
          sed -i 's/WORKDIR \/app/WORKDIR \/src/' Dockerfile

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository_owner }}/202302i
          tags: ${{ github.sha }}

      - name: Stop and remove existing container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop ${{ env.DEPLOYMENT_VERSION }} || true
            docker rm ${{ env.DEPLOYMENT_VERSION }} || true

      - name: Remove existing Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            IMAGE_ID=$(docker images -q ${{ github.repository_owner }}/202302i)
            if [ ! -z "$IMAGE_ID" ]; then
              docker rmi $IMAGE_ID
            fi

      - name: Copy and Run Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull docker.io/${{ github.repository_owner }}/202302i:${{ github.sha }}
            docker run -d --name ${{ env.DEPLOYMENT_VERSION }} -p 5000:5001 --restart always docker.io/${{ github.repository_owner }}/202302i:${{ github.sha }}

      - name: Modify websocket-client and pyRofex inside Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker exec -i $(docker ps -q --filter name=${{ env.DEPLOYMENT_VERSION }}) pip uninstall -y websocket-client
            docker exec -i $(docker ps -q --filter name=${{ env.DEPLOYMENT_VERSION }}) pip install websocket-client==0.57.0
            docker exec -i $(docker ps -q --filter name=${{ env.DEPLOYMENT_VERSION }}) sed -i 's/isAlive/is_alive/g' /usr/local/lib/python3.9/site-packages/websocket/_app.py
            docker exec -i $(docker ps -q --filter name=${{ env.DEPLOYMENT_VERSION }}) sh -c "sed -i '9i\class Environment:' /usr/local/lib/python3.9/site-packages/pyRofex/components/enums.py"
            docker exec -i $(docker ps -q --filter name=${{ env.DEPLOYMENT_VERSION }}) sh -c "echo 'def _add_environment_config(enumCuenta, env):' >> /usr/local/lib/python3.9/site-packages/pyRofex/service.py"

      - name: Copy bot421dbversion2.pem to Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker cp /home/ubuntu/bot421dbversion2.pem ${{ env.DEPLOYMENT_VERSION }}:/src
            docker stop ${{ env.DEPLOYMENT_VERSION }} || true
            docker start ${{ env.DEPLOYMENT_VERSION }}
